version 0.1
namespace rbac

// TODO: do we need to distinguish between service account and user principles as separate types?
type user {}

type realm {
    relation user_grant: [Any role_binding]
}

type tenant {
    relation realm: [ExactlyOne realm]
    relation user_grant: [Any role_binding]
    relation member: [Any user]
}

type group {
    relation owner: [ExactlyOne tenant]
    relation member: [Any user or group.member]
}

type role {}

type role_binding { // TODO: revisit cardinality based on clamping decisions
    relation subject: [Any user or group.member]
    relation granted: [Any role]
}

public type workspace {
    relation parent: [ExactlyOne workspace or tenant]
    relation user_grant: [Any role_binding]
}

// Adds a permission that's checkable at the workspace but granted by assigning a different, V1 permission to the role
public extension add_v1_based_permission(v1_perm, v2_perm) {
    type role {
        allow_duplicates relation `${v1_perm}`: [bool]
        relation `${v2_perm}`: `${v1_perm}`
    }

    type role_binding {
        relation `${v2_perm}`: subject and granted.`${v2_perm}`
    }

    type realm {
        relation `${v2_perm}`: user_grant.`${v2_perm}`
    }

    type tenant {
        relation `${v2_perm}`: user_grant.`${v2_perm}` or realm.`${v2_perm}`
    }

    type workspace {
        relation `${v2_perm}`: user_grant.`${v2_perm}` or parent.`${v2_perm}`
    }
}

// Adds a permission that's both assignable to a role and checkable at a workspace
public extension add_permission(workspace_perm) {
    type role {
        relation `${workspace_perm}`: [bool]
    }

    type role_binding {
        relation `${workspace_perm}`: subject and granted.`${workspace_perm}`
    }

    type realm {
        relation `${workspace_perm}`: user_grant.`${workspace_perm}`
    }

    type tenant {
        relation `${workspace_perm}`: user_grant.`${workspace_perm}` or realm.`${workspace_perm}`
    }

    type workspace {
        relation `${workspace_perm}`: user_grant.`${workspace_perm}` or parent.`${workspace_perm}`
    }
}